<?php
namespace app\modules\api\v1\controllers;

use Yii;
use app\models\User;
use yii\web\BadRequestHttpException;
use yii\web\ServerErrorHttpException;
use yii\web\UnauthorizedHttpException;

class UserController extends \app\modules\api\common\controllers\Controller
{

	/**
	 * @inheritdoc
	 */
	protected function verbs()
	{
		return [
			'authenticate'=>['POST'],
		];
	}

	public function init()
	{
		parent::init(); // TODO: Change the autogenerated stub
	}


	public function actionAuthenticate()
	{
		//validate content type
		$contentType = Yii::$app->request->headers->get('content-type');
		if ($contentType === null || strcasecmp($contentType, 'application/x-www-form-urlencoded') !== 0) {
			throw new BadRequestHttpException(Yii::t('app', '`content-type` header must be set to `application/x-www-form-urlencoded`'));
		}

		//get params
		$username = Yii::$app->request->post('username');
		$password = Yii::$app->request->post('password');

		//validate params
		$missing = [];
		foreach (['username', 'password'] as $var) {
			if (${$var} === null) $missing[] = $var;
		}
		if (!empty($missing)) {
			throw new BadRequestHttpException(Yii::t('app', 'Missing required parameters: {params}', [
				'params'=>implode(', ', $missing),
			]));
		}

		//fetch user model by email and validate password
		$model = User::findOne($username);
		if ($model === null || !$model->validatePassword($password)) {
			throw new UnauthorizedHttpException(Yii::t('app', 'Invalid login data'));
		}

		//create token
		$tokenModel = $model->createToken();
		if ($tokenModel === false) {
			throw new ServerErrorHttpException(Yii::t('app', 'Error while creating token'));
		}

		//prepare and send response
		$response = Yii::$app->response;
		$response->statusCode = 200;
		$response->format = 'json';
		return [
			'access_token'=>$tokenModel->token,
			'token_type'=>'bearer',
			'expires_in'=>$tokenModel->expires_at - time(),
		];
	}

}
